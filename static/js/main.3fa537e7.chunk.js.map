{"version":3,"sources":["components/Navbar/index.js","components/PortfolioItem/index.js","components/Portfolio/index.js","components/Profile/index.js","components/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","location","useLocation","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","pathname","PortfolioItem","props","href","src","image","alt","style","height","width","title","description","Portfolio","projects","projectList","content","i","length","push","key","Profile","Contact","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3fa537e7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction Navbar(){\n  const location = useLocation();\n\n\nreturn(\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n    <div className=\"nameBox\">\n        Aaron Tobey\n    </div>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n          <Link to=\"/\"  className={location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n            About\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link to=\"/portfolio\" className={location.pathname === \"/portfolio\" ? \"nav-link active\" : \"nav-link\"} >Portfolio</Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link to =\"/contact\" className={location.pathname === \"/contact\" ? \"nav-link active\" : \"nav-link\"} >Contact</Link>\n        </li>\n      </ul>\n    </div>\n  </nav>\n)\n}\nexport default Navbar","import React from \"react\";\nimport \"./style.css\";\n\nfunction PortfolioItem(props){\n\n    return(\n\n        <div className=\"col-md-6 col-12 pf-img flip-card\">\n        <a href={props.href}>\n        <div className=\"flip-card-inner\">\n          <div className=\"flip-card-front\">\n          <img src={props.image} alt={props.alt} style={{height:\"195px\", width:\"260px\"}}></img><div className=\"img-text\">{props.title}</div>\n          </div>\n          <div className=\"flip-card-back\">\n            <h3>{props.title}</h3>\n            {props.description}\n          </div>\n        </div></a>\n      </div>\n\n    )\n\n}\n\nexport default PortfolioItem","import React from \"react\";\nimport \"./style.css\";\nimport PortfolioItem from \"../PortfolioItem\"\nimport projectList from \"../../projects.json\"\n\nfunction Portfolio(){\nconst projects = projectList.projects;\nlet content=[]\nfor(let i=0; i<projects.length; i++){\n    if(i % 2 ===0){\n        if(i +1 < projects.length){\n            content.push(\n                <div className=\"row\">\n                    <PortfolioItem {...projects[i]} key={i}/>\n                    <PortfolioItem {...projects[i+1]} key={i+1}/>\n                </div>\n            )\n        }else{\n            content.push(\n                <div className=\"row\">\n                    <PortfolioItem {...projects[i]} key={i}/>\n                </div>\n            )\n        }\n    }\n}\nreturn (\n    <main className=\"container\">\n    <h2>Portfolio</h2>\n    {content}\n\n</main>\n)\n}\n\nexport default Portfolio;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Profile(){\n\nreturn(\n\n    <main className=\"container\">\n    <h2>About Me</h2>\n      <hr></hr>\n      <div className=\"row profileText\">\n        <p><img className=\"img img-thumbnail\" src=\"./assets/profileImage.jpg\" alt=\"Headshot\"></img>\n        \n          I'm originally from Austin, TX but have lived in the Dallas area for the last 10 years. I live with my wife Lauren and our two dogs, River and Buster. <br></br><br></br>\n         I graduated from Texas A&amp;M in 2009 with a degree in Manufacturing &amp; Mechanical Engineering Technology and worked as an industrial engineer until 2020, the last 6 years with UPS. During that time, I grew my skills in creating applications using excel, VBA and SQL to make tasks which were previously tedious and difficult quick and easy. Many of these will continue to be used long after my time there ended. <br></br><br></br>\n         I am looking for a job as a web developer. I will be completing the SMU Full Stack Web Dev coding bootcamp in early October and will be looking to start the next phase of my career. While I may not be have ever had the job title of Software Engineer, I do bring with me almost a decade of experience in engineering working on large projects, understanding technical documentation and solving difficult problems while maintaining a professional attitude. <br></br><br></br>\n        While it would be my preference to stay in the Dallas area, I would also be open to opportunities in Austin.</p>\n    </div>\n</main>\n)\n}\n\nexport default Profile;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Contact(){\n\nreturn(\n    <main className=\"container\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h1 className=\"contact\">Contact Information</h1>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item\"><a href=\"https://www.linkedin.com/in/aarontobey/\">LinkedIn</a></li>\n                <li className=\"list-group-item\"><a href=\"mailto: abtobey@gmail.com\">Email</a></li>\n                <li className=\"list-group-item\"><a href=\"https://docs.google.com/document/d/1-i1x4ACfQZ3COTmVo-C629vXqdZXvA4jbV1NJbN8ESY/edit?usp=sharing\">Resume</a></li>\n                <li className=\"list-group-item\"><a href=\"https://github.com/abtobey\">Github</a></li>\n              </ul>\n            </div>\n          </main>\n)\n}\n\nexport default Contact;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\nimport Portfolio from \"./components/Portfolio\"\nimport Profile from \"./components/Profile\"\nimport Contact from \"./components/Contact\"\n\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar/>\n\n      <Route exact path = \"/\" component={Profile}/>\n      <Route exact path =\"/portfolio\" component={Portfolio}/>\n      <Route exact path =\"/contact\" component={Contact}/>\n      <div className=\"gray\"></div>\n      <div className=\"cowboysBlue\">Created with React.js</div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}